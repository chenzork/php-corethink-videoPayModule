<?php
// +----------------------------------------------------------------------
// | OpenCMF [ Simple Efficient Excellent ]
// +----------------------------------------------------------------------
// | Copyright (c) 2014 http://www.opencmf.cn All rights reserved.
// +----------------------------------------------------------------------
// | Author: jry <598821125@qq.com>
// +----------------------------------------------------------------------
namespace Video\Controller;

use Home\Controller\HomeController;
use Common\Util\Think\Page;

/**
 * 默认控制器
 * @author jry <598821125@qq.com>
 */
class IndexController extends HomeController
{

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub

        /*加载分类*/
        $cat_list = D('video_category')->where(array('status' => 1))->select();
        $this->assign('cat_list', $cat_list);
    }

    /**
     * 默认方法
     * @author jry <598821125@qq.com>
     */
    public function index()
    {
        $map['status'] = 1;
        $map['cat_id'] = intval(I('cid'));//分类id
        $cat_c = D('video_category')->where(array('pid' => $map['cat_id']))->select();
        $cat_c_ar = array();
        $cat_c_ar[] = $map['cat_id'];
        foreach ($cat_c as $k => $v) {
            $cat_c_ar[] = $v['id'];
        }
        $map['cat_id'] = array('in', $cat_c_ar);
        $list = D('Index')->where($map)->select();

        $this->assign('list', $list);
        $this->assign('meta_title', "Video列表");
        $this->display();
    }

    /**
     * 读取视频流文件
     */
    public function readMovieFile()
    {

        $check_key = session('session_key');
        if ($check_key == md5("admin")) {
            session('session_key', null);//读取了一次后删除session
            set_time_limit(0);//超时状态
            header('Content-type:video/mp4');; //文件mime类型
            $file_path = I('file_path');
            $file_path = base64_decode($file_path);
            $my_file = fopen($file_path, "r") or die("Unable to open file!");
            while (!feof($my_file)) {
                $bruce = fgets($my_file);
                echo $bruce;
            }
            /*读取流中的数据后，删除session_key*/
            fclose($my_file);//关闭打开文件指针
        } else {
            $this->error('您请求的链接有误!!');
        }
    }

    /**
     * 列表
     * @author jry <598821125@qq.com>
     */
    public function lists($cid)
    {
        $map['cid'] = $cid;
        $map['status'] = 1;
        $list = D('Index')->where($map)->select();
        $this->assign('list', $list);
        $this->assign('meta_title', "Video列表");
        $this->display();
    }

    /**
     * 详情
     * @author jry <598821125@qq.com>
     */
    public function detail($id)
    {
        $map['status'] = 1;
        $info = D('Index')->where($map)->find($id);
        /*检测订单*/
        /*视频部分    Start*/
        session('limit_time', $info['free_time']);//写入免费时间

        session('session_key', md5('admin'));//只有这个用户使用这个key能正确解码出原路径内容
        $file_movie = base64_encode($info['video_path'] . $info['video_name']);
        $this->assign("file_url", $file_movie);//通过数据库读出视频文件加密地址
        /*视频部分    End*/

        /*获取用户支付状态*/
        $db_pay_log = D('video_pay_logs');
        $uid = is_login();
        $pay_status = 0;
        if ($uid > 0) {
            $order = $db_pay_log->where(array('video_id' => $id, 'uid' => $uid))->find();//查询订单
            $pay_status = intval($order['status']);
            if ($order['end_time'] < time()) {
                $pay_status = 0;//订单过期
                $db_pay_log->delete($order['id']);
            }
        }
        $this->assign('pay_status', $pay_status);
        $this->assign('info', $info);
        $this->assign('meta_title', "Video");
        $this->display();
    }

    public function orders()
    {
        $map['uid'] = $this->is_login();//是否登录
        $list = D('video_pay_logs')->where($map)->select();
        $this->assign('list', $list);
        $this->display();
    }

    public function pay()
    {
        $map['uid'] = $this->is_login();//是否登录
        if (IS_POST) {
            $map['video_id'] = I('video_id');
            $map['order_no'] = I('order_no');
            $db_model = D('video_pay_logs');
            $db_video_model = D('video_index');
            $db_user_model = D('admin_user');
            $user = $db_user_model->where(array('id' => $map['uid']))->find();
            $video_ = $db_video_model->where(array('id' => $map['video_id']))->find();
            $order = $db_model->where($map)->find();//
            if (!$order) {
                $this->error('支付失败,订单号不存在!');
            }
            if ($order['status'] == 1) {
                $this->error('订单已经支付', U('index'));
            }
            //时间检测
            if ($order['end_time'] < time()) {
                if ($db_model->where($map)->delete()) {
                    $this->error('订单已经过期请重新购买!');
                } else {
                    $this->error('未知错误!');
                }
            }
            if ($order['pay_money'] > $user['money']) {
                $this->error('对不起账户余额不足,请及时充值!', U('recharge/index/index'));
            }
            $ret1 = $db_user_model->where(array('id' => $map['uid']))->setDec('money', intval($order['pay_money']));
            if ($ret1) {
                $end_time = strtotime("+{$video_['you_day']} day");
                $ret2 = $db_model->where($map)->setField(array('status' => 1, 'end_time' => $end_time));
                if ($ret2) {
                    $this->success('支付成功!', U('index'));
                } else {
                    $this->error('支付失败!');
                }
            } else {
                $this->error('支付失败!');
            }

        } else {
            $map['video_id'] = I('vid');//视频id
            $db_model = D('video_pay_logs');
            $db_video_model = D('video_index');
            $db_user_model = D('admin_user');
            $video_ = $db_video_model->where(array('id' => $map['video_id']))->find();
            $user = $db_user_model->where(array('id' => $map['uid']))->find();
            $pay_data = $db_model->where($map)->find();//
            if (!$pay_data) {
                //支付逻辑,生成订单号插入
                $order_s['end_time'] = strtotime("+{$video_['you_day']} day");
                $order_s['order_no'] = create_order_no();
                $order_s['uid'] = $map['uid'];
                $order_s['pay_money'] = $video_['pay_money'];
                $order_s['video_id'] = $map['video_id'];
                $order_s['create_time'] = time();
                $order_s['update_time'] = $order_s['create_time'];
                $order_s['status'] = 0;//未支付
                $ret = $db_model->add($order_s);
                if ($ret) {
                    $this->assign('order', $order_s);
                    $this->assign('user', $user);
                    $this->assign('info', $video_);
                    $this->display('pay');
                } else {
                    $this->error('生成订单失败!');
                }
            }
            if ($pay_data['status'] != 1) {
                //未支付成功逻辑
                $this->assign('order', $pay_data);
                $this->assign('user', $user);
                $this->assign('info', $video_);
                $this->display('pay');
            }
        }

    }

    public function check_pay()
    {
        $uid = $this->is_login();


    }
}
